# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools

fastlane_version '2.95.0'

default_platform :ios

platform :ios do
  before_all do
    dotgpg_environment(dotgpg_file: '.env.gpg')
  end

  lane :clean_full do
    clean_build_artifacts
    clean_cocoapods_cache
    clear_derived_data
    clear_derived_data(derived_data_path: "ios/build")
    reset_simulator_contents
  end

  lane :setup do
    sh("cp -r ../ios/Support/podspecs/ ../node_modules")
    cocoapods(podfile: "./ios")
  end

  desc "Runs all the tests"
  lane :test do
    scan
  end

  lane :bump_version do
    ensure_git_status_clean
    increment_build_number
    update_settings_bundle key: "CurrentAppVersion", value: ":version (:build)"
    update_settings_bundle key: "BuildDate", value: Time.now.strftime("%Y-%m-%d")
    commit_version_bump
  end

  desc 'Prepare local development build'
  lane :dev do
    sync_code_signing
    update_info_plist(plist_path: 'MobiusMobileWallet/Info.plist', display_name: 'âˆž Wallet')
    add_badge(alpha: true)
    build_app(configuration: 'Debug')
  end

  lane :prepare_distrib do
    appicon(
      appicon_devices: [:ipad, :iphone, :ios_marketing],
      appicon_image_file: "ios/assets/app-icon.png",
      appicon_path: "ios/MobiusMobileWallet/Assets.xcassets",
      remove_alpha: true
    )
    update_info_plist(
      plist_path: 'MobiusMobileWallet/Info.plist',
      app_identifier: 'network.mobius.wallet',
      display_name: 'Mobius Wallet'
    )
  end

  desc 'Push a new build to Crashlytics.'
  lane :qa do
    sync_code_signing
    # update_info_plist(plist_path: 'MobiusMobileWallet/Info.plist', display_name: 'Mobius Wallet')
    add_badge(alpha: true)
    build_app(clean: false)
    upload_symbols_to_crashlytics(binary_path: './ios/Pods/Fabric/upload-symbols')
    crashlytics(groups: "devs", debug: true)
  end

  desc "Push a new beta build to TestFlight"
  lane :beta do
    sync_code_signing
    prepare_distrib
    build_app
    upload_symbols_to_crashlytics
    upload_to_testflight
  end

  desc "Push a new production build to App Store"
  lane :production do
    sync_code_signing
    build_app
    upload_symbols_to_crashlytics
    upload_to_appstore
  end
end

platform :android do
  desc 'Clean Android project.'
  lane :clean do
    gradle(task: 'clean', project_dir: 'android/')
  end

  desc 'Build the Android application.'
  lane :build do
    clean
    gradle(
      task: 'assemble',
      build_type: 'Release',
      project_dir: 'android/'
    )
  end

  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    build
    gradle(task: "assembleRelease")
    #upload_to_play_store
  end
end

before_all do
  %w[GYM_WORKSPACE SCAN_WORKSPACE].each do |key|
    ENV[key] ||= ENV['FASTLANE_WORKSPACE']
  end
  %w[FL_BUILD_NUMBER_PROJECT FL_UPDATE_PLIST_PROJECT_PATH SETTINGS_BUNDLE_XCODEPROJ].each do |key|
    ENV[key] ||= ENV['FASTLANE_PROJECT']
  end
end
